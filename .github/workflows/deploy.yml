name: Build and Deploy to EKS

on:
  push:
    branches: [ main ]
    
env:
  IMAGE_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} ./2048-Game
        docker push ${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ secrets.EKS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

    - name: Deploy to EKS
      run: |
        # Update the image tag in your Deployment YAML
        sed -i "s|<IMAGE_TAG>|${{ env.IMAGE_TAG }}|g" K8s/2048-deployment.yml
    
        # Apply all resources
        kubectl apply -f 2048-deployment.yml
        kubectl apply -f flask-service.yaml
        kubectl apply -f ingress.yaml
    
        # Wait for deployment to complete
        kubectl rollout status deployment/flask-deployment
    
